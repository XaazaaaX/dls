name: Build and Dockerize Angular and Spring Boot Apps

on:
  push:
    branches:
      - main

jobs:
  # Angular App Docker Build
  build-angular:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: npm ci
        working-directory: DlsaApp

      - name: 🏗️ Build Angular app (production)
        run: npm run build -- --configuration production
        working-directory: DlsaApp

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🧱 Build and push Angular Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dlsa-app:latest ./DlsaApp
          docker push ${{ secrets.DOCKER_USERNAME }}/dlsa-app:latest

  # Spring Boot API Docker Build
  build-api:
    runs-on: ubuntu-latest
    needs: build-angular  # nur wenn Angular zuerst gebaut werden soll
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🧱 Build and push API Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dlsa-api:latest -f DlsaApi/Dockerfile ./DlsaApi
          docker push ${{ secrets.DOCKER_USERNAME }}/dlsa-api:latest
